"""The module includes functionality for getting currently observed weather."""

from datetime import datetime as dt
import pytz
from pyowm.owm import OWM
from config import APIKEY, INCH_TO_MM_CONSTANT

USER_TIMEZONE = pytz.timezone("Europe/Kiev")


def get_weather(city: str, open_weather_token: str) -> dict:
    """The function shows currently observed weather.

    :param city: the city name with country abbreviate, for example "Kharkiv,UA"
    :param open_weather_token: the API key is generated by
        https://home.openweathermap.org/api_keys service
    :returns: dictionary with observed weather items
    """
    observed_weather = {}
    owm = OWM(open_weather_token)
    weather_mng = owm.weather_manager()
    weather = weather_mng.weather_at_place(city).weather
    sunrise = weather.sunrise_time("date")
    sunset = weather.sunset_time("date")

    weather_status_dict = {"Thunderstorm": "\U000026C8",
                           "Clear": "\U00002600",
                           "Rain": "\U0001F327",
                           "Snow": "\U00002744",
                           "Mist": "\U0001F32B",
                           "Fog": "\U0001F32B",
                           "Clouds": "\U00002601"}

    observed_weather["current date"] = dt.strftime(dt.now(), "%d/%m/%y %H:%M")
    if weather.status in weather_status_dict:
        weather_icon = weather_status_dict.get(weather.status)
        observed_weather['status'] = f"{weather_icon}{weather.status}"
    else:
        observed_weather['status'] = "I do not understand what is going on!\nJust look to the window!"
    observed_weather['temperature\U0001F321'] = f"{weather.temperature('celsius').get('temp')}Â°C"
    observed_weather['humidity\U0001F4A7'] = f"{weather.humidity}%"
    observed_weather['pressure'] = \
        f"{round(weather.barometric_pressure('inHg').get('press') * INCH_TO_MM_CONSTANT, 1)} mm.Hg"
    observed_weather['wind speed\U0001F32C'] = weather.wind().get("speed")
    observed_weather['clouds\U00002601'] = f"{weather.clouds}%"
    observed_weather['rain\U0001F328'] = f"{weather.rain.get('1h', ' ')} mm"
    observed_weather['sunrise\U0001F305'] = str(dt.time(sunrise.astimezone(USER_TIMEZONE)))
    observed_weather['sunset\U0001F307'] = str(dt.time(sunset.astimezone(USER_TIMEZONE)))
    return observed_weather


def main():
    """The "main" function provides common functionality implementation."""
    print(get_weather('Kharkiv, UA', APIKEY))


if __name__ == '__main__':
    main()
